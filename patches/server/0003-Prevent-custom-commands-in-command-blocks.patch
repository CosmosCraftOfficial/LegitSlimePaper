From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Legitimoose <legitimoose@gmail.com>
Date: Wed, 17 Jan 2024 17:50:08 -0800
Subject: [PATCH] Prevent custom commands in command blocks

Add a new commandBlockAllowed boolean to command nodes. This is set when commands are first registered. Currently no way
to set this later on.
When server commands are dispatched, check if running in a command block,
and if it's not vanilla, act like it's not a valid command.

diff --git a/src/main/java/com/mojang/brigadier/tree/CommandNode.java b/src/main/java/com/mojang/brigadier/tree/CommandNode.java
index 39844531b03eb8a6c70700b4ecbf0ff1a557424d..3b0dfba39781d93ece41757950c8d7a2ffe7037c 100644
--- a/src/main/java/com/mojang/brigadier/tree/CommandNode.java
+++ b/src/main/java/com/mojang/brigadier/tree/CommandNode.java
@@ -42,6 +42,7 @@ public abstract class CommandNode<S> implements Comparable<CommandNode<S>> {
         this.arguments.remove(name);
     }
     // CraftBukkit end
+    public Boolean commandBlockAllowed = false; // Moose
 
     protected CommandNode(final Command<S> command, final Predicate<S> requirement, final CommandNode<S> redirect, final RedirectModifier<S> modifier, final boolean forks) {
         this.command = command;
diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index 3eec879bf3975636739b2491cc05b8177032d16d..2f67bd8dc097ea90582d0f5aa3af849e4f846802 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -34,7 +34,6 @@ import net.minecraft.gametest.framework.TestCommand;
 import net.minecraft.network.chat.ClickEvent;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.ComponentUtils;
 import net.minecraft.network.chat.HoverEvent;
 import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.protocol.game.ClientboundCommandsPacket;
@@ -120,6 +119,7 @@ import net.minecraft.server.commands.data.DataCommands;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.tags.TagKey;
 import net.minecraft.util.profiling.jfr.JvmProfiler;
+import net.minecraft.world.level.BaseCommandBlock;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -235,7 +235,24 @@ public class Commands {
         if (environment.includeIntegrated) {
             PublishCommand.register(this.dispatcher);
         }
-        this.vanillaCommandNodes.addAll(this.dispatcher.getRoot().getChildren()); // Paper
+        // Moose start - Special boolean to track command block allowed commands (allowed to be ran by command blocks and click events).
+        for (CommandNode<CommandSourceStack> node : this.dispatcher.getRoot().getChildren()) {
+            String cmd = node.getName();
+            if (!(cmd.equalsIgnoreCase("stop") || cmd.equalsIgnoreCase("kick")
+                || cmd.equalsIgnoreCase("op") || cmd.equalsIgnoreCase("deop")
+                || cmd.equalsIgnoreCase("ban") || cmd.equalsIgnoreCase("ban-ip")
+                || cmd.equalsIgnoreCase("pardon") || cmd.equalsIgnoreCase("pardon-ip")
+                || cmd.equalsIgnoreCase("reload") || cmd.equalsIgnoreCase("jfr")
+                || cmd.equalsIgnoreCase("debug") || cmd.equalsIgnoreCase("whitelist")
+                || cmd.equalsIgnoreCase("perf") || cmd.equalsIgnoreCase("save-all")
+                || cmd.equalsIgnoreCase("save-on") || cmd.equalsIgnoreCase("save-off")
+                || cmd.equalsIgnoreCase("setidletimeout"))) {
+                node.commandBlockAllowed = true;
+            }
+
+            this.vanillaCommandNodes.add(node);
+        }
+        // Moose end
 
         // Paper start
         for (final CommandNode<CommandSourceStack> node : this.dispatcher.getRoot().getChildren()) {
@@ -327,6 +344,14 @@ public class Commands {
             byte b1;
 
             try {
+                // Moose start - Command block whitelist
+                if (parseresults.getContext().getSource().source instanceof BaseCommandBlock) {
+                    if (!parseresults.getContext().getNodes().get(0).getNode().commandBlockAllowed) {
+                        throw new Exception("Non-vanilla commands cannot be executed in command blocks.");
+                    }
+                }
+                // Moose end
+
                 int i = this.dispatcher.execute(parseresults);
 
                 return i;
